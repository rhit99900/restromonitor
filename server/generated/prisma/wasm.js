
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.RestaurantsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  brand: 'brand',
  city: 'city',
  expected_open_time: 'expected_open_time',
  expected_close_time: 'expected_close_time',
  created_at: 'created_at'
};

exports.Prisma.PlatformScalarFieldEnum = {
  id: 'id',
  name: 'name',
  platform_uri: 'platform_uri',
  created_at: 'created_at'
};

exports.Prisma.RestaurantPlatformScalarFieldEnum = {
  id: 'id',
  restaurant_id: 'restaurant_id',
  platform_id: 'platform_id',
  restaurant_platform_uri: 'restaurant_platform_uri',
  created_at: 'created_at'
};

exports.Prisma.PlatformRestaurantAvailabilityScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  restaurant_platform_id: 'restaurant_platform_id',
  is_available: 'is_available'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};


exports.Prisma.ModelName = {
  Restaurants: 'Restaurants',
  Platform: 'Platform',
  RestaurantPlatform: 'RestaurantPlatform',
  PlatformRestaurantAvailability: 'PlatformRestaurantAvailability'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Library/WebServer/Documents/dev/Personal/restromonitor/server/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Library/WebServer/Documents/dev/Personal/restromonitor/server/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Restaurants {\n  id                  Int                  @id @default(autoincrement())\n  name                String               @unique\n  address             String\n  brand               String\n  city                String\n  expected_open_time  String\n  expected_close_time String\n  created_at          DateTime             @default(now())\n  listings            RestaurantPlatform[]\n}\n\nmodel Platform {\n  id           Int                  @id @default(autoincrement())\n  name         String               @unique\n  platform_uri String\n  created_at   DateTime             @default(now())\n  restaurants  RestaurantPlatform[]\n}\n\nmodel RestaurantPlatform {\n  id                      Int         @id @default(autoincrement())\n  restaurant_id           Int\n  restaurant              Restaurants @relation(fields: [restaurant_id], references: [id])\n  platform_id             Int\n  platform                Platform    @relation(fields: [platform_id], references: [id])\n  restaurant_platform_uri String\n  created_at              DateTime    @default(now())\n\n  platform_availability PlatformRestaurantAvailability[]\n\n  @@unique([restaurant_id, platform_id])\n}\n\nmodel PlatformRestaurantAvailability {\n  id                     Int                @id @default(autoincrement())\n  created_at             DateTime           @default(now())\n  updated_at             DateTime           @updatedAt\n  restaurant_platform_id Int\n  restaurant_platform    RestaurantPlatform @relation(fields: [restaurant_platform_id], references: [id])\n  is_available           Boolean            @default(true)\n}\n",
  "inlineSchemaHash": "3a560b19eee91bfe6a91bae040e3504d46ed007548f3f2301b1d19b2c9ae08ec",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Restaurants\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expected_open_time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expected_close_time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"listings\",\"kind\":\"object\",\"type\":\"RestaurantPlatform\",\"relationName\":\"RestaurantPlatformToRestaurants\"}],\"dbName\":null},\"Platform\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platform_uri\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"restaurants\",\"kind\":\"object\",\"type\":\"RestaurantPlatform\",\"relationName\":\"PlatformToRestaurantPlatform\"}],\"dbName\":null},\"RestaurantPlatform\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"restaurant_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"restaurant\",\"kind\":\"object\",\"type\":\"Restaurants\",\"relationName\":\"RestaurantPlatformToRestaurants\"},{\"name\":\"platform_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"platform\",\"kind\":\"object\",\"type\":\"Platform\",\"relationName\":\"PlatformToRestaurantPlatform\"},{\"name\":\"restaurant_platform_uri\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"platform_availability\",\"kind\":\"object\",\"type\":\"PlatformRestaurantAvailability\",\"relationName\":\"PlatformRestaurantAvailabilityToRestaurantPlatform\"}],\"dbName\":null},\"PlatformRestaurantAvailability\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"restaurant_platform_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"restaurant_platform\",\"kind\":\"object\",\"type\":\"RestaurantPlatform\",\"relationName\":\"PlatformRestaurantAvailabilityToRestaurantPlatform\"},{\"name\":\"is_available\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

